map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

resolver 127.0.0.11 valid=60s;

server {
  listen 80;
  server_name blackholejs.art www.blackholejs.art localhost;

  location /stub_status {
    stub_status;
    allow 127.0.0.1;
    deny all;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name blackholejs.art www.blackholejs.art;

  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;
  client_max_body_size 10m;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers HIGH:!aNULL:!MD5;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  include /etc/nginx/includes/common.conf;

  root /usr/share/nginx/html;
  index index.html;

  # Error fallback
  error_page 502 503 504 /502.html;
  location = /502.html {
    root /etc/nginx/conf.d;
    internal;
    add_header Content-Type text/html;
  }

  # Upstream mappings
  set $auth_upstream     "auth:8002";
  set $dash_upstream     "dash:8003";
  set $chat_upstream     "chat:8005";
  set $game_upstream     "game:8004";
  set $gateway_upstream  "gateway:8000";
  set $grafana_upstream  "grafana:3000";
  set $kibana_upstream   "kibana:5601";
  set $pgadmin_upstream  "pgadmin:8087";
  set $kafka_ui_upstream "kafka-ui:8080";
  set $frontend_upstream "frontend:3000";



  # Backend APIs
location ^~ /api/auth/ {
  include /etc/nginx/includes/common.conf;
  proxy_pass http://$auth_upstream;
}

location ^~ /api/dash/ {
  include /etc/nginx/includes/common.conf;
  proxy_pass http://$dash_upstream;
}
 
location ^~ /api/chat/ {
  include /etc/nginx/includes/common.conf;
  proxy_pass http://$chat_upstream;
}

location ^~ /api/game/ {
  include /etc/nginx/includes/common.conf;
  proxy_pass http://$game_upstream;
}

location ^~ /api/gateway {
  include /etc/nginx/includes/common.conf;
  proxy_pass http://$gateway_upstream;
}

  # APM Server (RUM)
  location /apm/ {
    proxy_pass http://apm-server:8200/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection $connection_upgrade;
    proxy_http_version 1.1;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    if ($request_method = OPTIONS) {
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 204;
    }
  }

  # Catch-all API (fallback to gateway)
  location ^~ /api/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_pass http://$gateway_upstream;
    proxy_intercept_errors on;
  }

  # WebSocket endpoints
  location /gateway.socket/ {
    proxy_pass http://$gateway_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    proxy_connect_timeout 60s;
    proxy_buffering off;
  }

  location /game.socket/ {
    proxy_pass http://$game_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    proxy_connect_timeout 60s;
    proxy_buffering off;
  }

  # Monitoring tools
  location /grafana/api/live/ {
    proxy_pass http://$grafana_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_intercept_errors on;
  }

  location /grafana/ {
    proxy_pass http://$grafana_upstream;
    proxy_set_header Host $host;
    proxy_intercept_errors on;
  }

  location /kibana/ {
    proxy_pass http://$kibana_upstream;
    proxy_set_header Host $host;
    proxy_intercept_errors on;
  }

  location /pgadmin4/ {
    proxy_pass http://$pgadmin_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Script-Name /pgadmin4;
    proxy_redirect off;
    proxy_intercept_errors on;
  }

  location /kafkaui {
    proxy_pass http://$kafka_ui_upstream;
    proxy_set_header Host $host;
    proxy_intercept_errors on;
  }
  
  location /avatars/ {
    alias /uploads/avatars/;
    autoindex off;
    add_header Cache-Control "public, max-age=86400";
    access_log off;
  }

  # Frontend (Next.js)
  location / {
    proxy_pass http://$frontend_upstream;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NextJS-Data 1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_connect_timeout 25s;
    proxy_send_timeout 25s;
    proxy_read_timeout 25s;
    proxy_intercept_errors on;
  }


  # Debug route
  location = /debug-upstream {
    default_type text/plain;
    return 200 "$game_upstream\n";
  }
}
